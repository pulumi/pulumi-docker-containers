# syntax = docker/dockerfile:experimental
# Interim container so we can copy pulumi binaries
FROM redhat/ubi9-minimal:latest as builder
ARG PULUMI_VERSION
RUN microdnf upgrade -y && microdnf install -y \
    gzip \
    tar
# Install the Pulumi SDK, including the CLI and language runtimes.
RUN curl -fsSL https://get.pulumi.com/ | bash -s -- --version $PULUMI_VERSION

# The runtime container
FROM redhat/ubi9-minimal:latest
ARG LANGUAGE_VERSION
LABEL org.opencontainers.image.description="Pulumi CLI container for python"
WORKDIR /pulumi/projects

# Install needed tools, like git, and build dependencies
RUN microdnf upgrade -y && microdnf install -y \
    bzip2 \
    bzip2-devel \
    ca-certificates \
    findutils \
    gcc \
    gdbm-libs \
    git \
    libffi-devel \
    libnsl2 \
    libuuid-devel \
    make \
    ncurses \
    ncurses-devel \
    openssl-devel \
    patch \
    readline \
    sqlite \
    sqlite-devel \
    tar \
    xz-devel \
    zlib-devel

# Install python using pyenv
RUN git clone --depth=1 https://github.com/pyenv/pyenv.git /usr/local/share/pyenv
ENV PYENV_ROOT=/usr/local/share/pyenv
ENV PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"
RUN pyenv install ${LANGUAGE_VERSION}
RUN pyenv global ${LANGUAGE_VERSION}

# Install poetry
RUN curl -sSL https://install.python-poetry.org | POETRY_HOME=/usr/local/share/pypoetry python3 -
RUN ln -s /usr/local/share/pypoetry/bin/poetry /usr/local/bin/

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | XDG_BIN_HOME=/usr/local/share/uv bash -s -- --no-modify-path
RUN ln -s /usr/local/share/uv/uv /usr/local/bin/
RUN ln -s /usr/local/share/uv/uvx /usr/local/bin/

# Uses the workdir, copies from pulumi interim container
COPY --from=builder /root/.pulumi/bin/pulumi /pulumi/bin/pulumi
COPY --from=builder /root/.pulumi/bin/*-python* /pulumi/bin/
ENV PATH "/pulumi/bin:${PATH}"

CMD ["pulumi"]
